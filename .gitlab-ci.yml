variables:
  APP_NAME: static-website-ay
  REVIEW_APP_NAME: static-web-site-ay-${CI_COMMIT_REF_NAME}
  REVIEW_API_ENDPOINT: ip10-0-5-6-cpfj045cd84000a7dl70-1993.direct.docker.labs.eazytraining.fr
  REVIEW_APP_ENDPOINT: ip10-0-5-6-cpfj045cd84000a7dl70-80.direct.docker.labs.eazytraining.fr
  STG_API_ENDPOINT: ip10-0-5-5-cpfj045cd84000a7dl70-1993.direct.docker.labs.eazytraining.fr
  STG_APP_ENDPOINT: ip10-0-5-5-cpfj045cd84000a7dl70-1980.direct.docker.labs.eazytraining.fr
  PROD_API_ENDPOINT: ip10-0-5-4-cpfj045cd84000a7dl70-1993.direct.docker.labs.eazytraining.fr
  PROD_APP_ENDPOINT: ip10-0-5-4-cpfj045cd84000a7dl70-80.direct.docker.labs.eazytraining.fr
  INTERNAL_PORT: 5000
  EXTERNAL_PORT: 80
  CONTAINER_IMAGE: ${IMAGE_NAME}:${CI_COMMIT_REF_NAME}

image: docker:latest
services: 
    - name: docker:dind
      alias: docker

stages:
    - Build
    - Test acceptation
    - Release image
    - Deploy review
    - Stop review
    - Deploy staging
    - Test staging
    - Deploy prod
    - Test prod

.test_template: &test
  image: alpine
  only:
    - master
  script:
    - apk --no-cache add curl
    - curl "https://$DOMAIN" | grep -i "Dimension"  

docker-build:
    stage: Build
    script:
        - docker build -t static-website-ay .
        - docker save static-website-ay > static-website-ay.tar
    artifacts:
        paths:
            - static-website-ay.tar

test acceptation:
    stage: Test acceptation
    script:
        - docker load < static-website-ay.tar
        - docker run -d -p 80:5000 -e PORT=5000 --name static-website-ay-container static-website-ay
        - sleep 5
        - apk --no-cache add curl
        - curl "http://docker" | grep -i "Dimension"

release image:
    stage: Release image
    script:
        - docker load < static-website-ay.tar
        - docker tag static-website-ay "${IMAGE_NAME}:${CI_COMMIT_REF_NAME}"
        - docker tag static-website-ay "${IMAGE_NAME}:${CI_COMMIT_SHORT_SHA}"
        - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
        - docker push "${IMAGE_NAME}:${CI_COMMIT_REF_NAME}"
        - docker push "${IMAGE_NAME}:${CI_COMMIT_SHORT_SHA}"

deploy staging:
  stage: Deploy staging
  environment:
    name: staging
    url: http://${STG_APP_ENDPOINT}
  only:
    - master
  script:
    - apk --no-cache add curl
    - 'curl -X POST http://${STG_API_ENDPOINT}/staging -H "Content-Type: application/json" -d "{\"your_name\":\"${APP_NAME}\",\"container_image\":\"${CONTAINER_IMAGE}\",  \"external_port\":\"${EXTERNAL_PORT}\", \"internal_port\":\"${INTERNAL_PORT}\"}"' 

deploy prod:
  stage: Deploy prod
  environment:
    name: prod
    url: http://${PROD_APP_ENDPOINT}
  only:
    - master
  script:
    - apk --no-cache add curl
    - 'curl -X POST http://${PROD_API_ENDPOINT}/prod -H "Content-Type: application/json" -d "{\"your_name\":\"${APP_NAME}\",\"container_image\":\"${CONTAINER_IMAGE}\", \"external_port\":\"${EXTERNAL_PORT}\", \"internal_port\":\"${INTERNAL_PORT}\"}"'

.deploy review:
  stage: Deploy review
  only:
    - merge_requests
  script:
    - apk --no-cache add npm jq
    - npm install -g heroku
    - heroku container:login
    - heroku create env-ay-$CI_COMMIT_REF_NAME  || echo "project already exists"
    - heroku container:push -a env-ay-$CI_COMMIT_REF_NAME web
    - heroku container:release -a env-ay-$CI_COMMIT_REF_NAME web
    - REVIEW_ENVIRONMENT_URL=$(heroku info env-ay-$CI_COMMIT_REF_NAME --json | jq -r '.app.web_url')
    - echo "REVIEW_ENVIRONMENT_URL=$REVIEW_ENVIRONMENT_URL" >> deploy.env
  artifacts:
    reports:
      dotenv: deploy.env  
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: $REVIEW_ENVIRONMENT_URL
    on_stop: stop review

.stop review:
  stage: Stop review
  variables:
    GIT_STRATEGY: none
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  only:
    - merge_requests
  when: manual
  script:
    - apk --no-cache add npm
    - npm install -g heroku
    - heroku container:login
    - heroku apps:destroy -a env-ay-$CI_COMMIT_REF_NAME -c env-ay-$CI_COMMIT_REF_NAME


.test staging:
  <<: *test
  stage: Test staging
  variables:
    DOMAIN: env-ay-staging-a8b49f681c7b.herokuapp.com/


.test prod:
  <<: *test
  stage: Test prod
  variables:
    DOMAIN: env-ay-prod-d158a29b1fec.herokuapp.com

